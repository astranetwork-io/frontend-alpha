<?php

namespace Astra\SharedBundle\Repository;

use Astra\SharedBundle\Entity\Directory;
use Astra\SharedBundle\Entity\File;
use Astra\SharedBundle\Entity\Project;
use Astra\SharedBundle\Entity\User;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * ProjectFileRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectFileRepository extends \Doctrine\ORM\EntityRepository
{
    public function getFileForDirectoryAndProject(Directory $directory, Project $project)
    {
        $params = [];

        $params['directoryId'] = $directory->getId();
        $params['projectId'] = $project->getId();
        $sql =
            "
            SELECT
                file.*
            FROM file
            INNER JOIN (SELECT DISTINCT file_id FROM project_file WHERE project_id = :projectId) pf ON file.id = pf.file_id
            WHERE file.directory_id = :directoryId
            ";
        $rsm = new ResultSetMappingBuilder($this->_em);
        $rsm->addRootEntityFromClassMetadata(File::class, 'file');
        $query = $this->_em->createNativeQuery($sql, $rsm);
        $query->setParameters($params);

        $result = $query->getResult();

        return $result;

    }
}
