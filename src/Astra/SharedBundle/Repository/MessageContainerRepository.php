<?php

namespace Astra\SharedBundle\Repository;

use Astra\SharedBundle\Entity\MessageContainer;
use Astra\SharedBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * MessageContainerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessageContainerRepository extends EntityRepository
{
    /**
     * @param User $user
     * @return MessageContainer[]
     */
    public function getAllForUser(User $user)
    {
        $sql =
            "
            SELECT
            mc.*
            FROM message_container mc
            INNER JOIN (SELECT DISTINCT mcu.message_container_id AS id FROM message_container_users mcu WHERE mcu.user_id = :userId) mcIDS ON 
            mc.id = mcIDS.id
            ";

        $parameters['userId'] = $user->getId();

        $rsm = new ResultSetMappingBuilder($this->_em);
        $rsm->addRootEntityFromClassMetadata($this->_class->name, 'mc');
        $query = $this->_em->createNativeQuery($sql, $rsm);
        $query->setParameters($parameters);

        $result = $query->getResult();

        return $result;
    }
}
