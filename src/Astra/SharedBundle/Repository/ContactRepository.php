<?php

namespace Astra\SharedBundle\Repository;

use Astra\SharedBundle\Entity\Contact;
use Astra\SharedBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * ContactRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactRepository extends EntityRepository
{
    /**
     * @param User $user
     * @param string $request
     * @return Contact[]
     */
    public function getForUser(User $user,$request = '')
    {
        if(empty($request)) {
            $queryBuilder = $this->createQueryBuilder('contact')
                ->innerJoin('contact.user', 'user')
                ->innerJoin('contact.contactList', 'contactList')
                ->where("contact.user = :user")->setParameter('user', $user);

            return $queryBuilder->getQuery()->getResult();
        }
        $params['user'] = $user->getId();
        $params['request'] = '%'.$request.'%';
        $sql =
            "
            SELECT
            contact.*
            FROM contact
            INNER JOIN 
            (
                SELECT DISTINCT
                contact.contact_list_id as id
                FROM contact
                INNER JOIN users ON contact.user_id = users.id
                WHERE
                (
                    (users.username LIKE :request) OR
                    (users.email LIKE :request) OR
                    (users.name LIKE :request) OR
                    (users.surname LIKE :request) OR
                    (users.skype LIKE :request) OR
                    (users.phone LIKE :request)
                )
            ) x ON x.id = contact.id
            WHERE contact.user_id = :user
            ";

        $em = $this->getEntityManager();
        $rsm = new ResultSetMappingBuilder($em);

        $rsm->addRootEntityFromClassMetadata('AstraSharedBundle:Contact', 'ContactList');
        $query = $em->createNativeQuery($sql, $rsm);
        $query->setParameters($params);

        return $query->getResult();
    }
}
